name: DevRelease

on:
  push:
    branches:
      - "dev-release"

jobs:
  assets:
    name: Build and release assets
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      - name: set the build version (git hash)
        run: echo "BUILD_VERSION=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV

      - name: set the build version (git hash)
        run: echo "BUILD_NAME=dev-$BUILD_VERSION" >> $GITHUB_ENV

      - name: set the release version (tag)
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Install latest Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt

      - name: Install Wasm Rust target
        run: rustup target add wasm32-wasi

      - name: Make
        run: make build-wasm
        env:
          APP_LOG_LEVEL: TRACE

      - name: generate checksums
        run: |
          echo "RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          echo "API_CHECKSUM=$(sha256sum target/wasm32-wasi/release/api.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "FOLLOWERS_CHECKSUM=$(sha256sum target/wasm32-wasi/release/followers.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "FOLLOWING_CHECKSUM=$(sha256sum target/wasm32-wasi/release/following.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "INBOX_CHECKSUM=$(sha256sum target/wasm32-wasi/release/inbox.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "OAUTH_CHECKSUM=$(sha256sum target/wasm32-wasi/release/oauth.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "OUTBOX_CHECKSUM=$(sha256sum target/wasm32-wasi/release/outbox.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "WEB_CHECKSUM=$(sha256sum target/wasm32-wasi/release/web.wasm | awk '{print $1}')" >> $GITHUB_ENV
          echo "WELLKNOWN_CHECKSUM=$(sha256sum target/wasm32-wasi/release/well_known.wasm | awk '{print $1}')" >> $GITHUB_ENV

      - name: Render Checksum Template
        uses: recih/template-render-action@v1.0.2
        with:
          template-file: "checksums.txt.template"
          engine: mustache
          output-file: checksums-${{ env.BUILD_VERSION }}.txt
          glob: false

      - name: Render Spin Template
        uses: recih/template-render-action@v1.0.2
        with:
          template-file: "spin.toml.template"
          engine: mustache
          output-file: spin.toml
          glob: false

      - name: Render Containerfile Template
        uses: recih/template-render-action@v1.0.2
        with:
          template-file: "Containerfile.template"
          engine: mustache
          output-file: Containerfile
          glob: false

      - name: Render Compose.yaml Template
        uses: recih/template-render-action@v1.0.2
        with:
          template-file: "Compose.yaml.template"
          engine: mustache
          output-file: Compose.yaml
          glob: false

      - name: Release assets
        uses: softprops/action-gh-release@v2.0.8
        with:
          prerelease: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          tag_name: ${{ env.BUILD_NAME }}
          make_latest: false
          target_commitish: $GITHUB_SHA
          files: |
            target/wasm32-wasi/release/api.wasm
            target/wasm32-wasi/release/followers.wasm
            target/wasm32-wasi/release/following.wasm
            target/wasm32-wasi/release/inbox.wasm
            target/wasm32-wasi/release/oauth.wasm
            target/wasm32-wasi/release/outbox.wasm
            target/wasm32-wasi/release/web.wasm
            target/wasm32-wasi/release/well_known.wasm
            checksums-${{ env.BUILD_VERSION }}.txt
            runtime-config.toml
            spin.toml
            Containerfile
            Compose.yaml

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build the Container image
        run: docker build . --file Containerfile --tag ghcr.io/prefer-social/kite:${{ env.BUILD_NAME }} -t ghcr.io/prefer-social/kite:dev-latest

      - name: Push the Docker image with version number
        run: |
          docker image push ghcr.io/prefer-social/kite:${{ env.BUILD_NAME }}
          docker image push ghcr.io/prefer-social/kite:dev-latest
